@using Microsoft.AspNet.Identity
@model SocialNetwork.Models.UserTasksViewModel
@{
    ViewBag.Title = "ViewTask";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/jquery-2.1.1.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/Scripts/jquery-manage.js"></script>
<script src="~/Scripts/bootstrap-maxlength.js"></script>
<script src="~/Scripts/chart-manager.js"></script>
<script src="~/Scripts/highcharts.js"></script>
<script src="~/Scripts/parser.js"></script>
<script src="~/Scripts/taskstat.js"></script>
<script src="~/Scripts/viewtask.js"></script>

<style>
    .div-margin {
        margin: 20px;
    }

    .div-main {
        margin: 0 150px 0 150px;
        padding: 20px;
    }
</style>

@Html.Partial("_ViewTaskHeaderPartial")

<div class="div-main" style="border: 1px solid #dddddd; border-radius: 5px" id="div-main" data-task-id="@Model.Id">

    <div class="row">
        <div class="col-lg-8">
            <div>
                <h3 style="margin: 0 0 20px 0">@Model.UserTaskTitle</h3>
            </div>
            @Html.Action("ViewTags", "UserTask", new { taskId = Model.Id })
        </div>
        <div class="col-lg-4">
            <div class="pull-right" style="padding-left: 10px">
                @SocialNetwork.Resources.Resource.by @Html.ActionLink(Model.UserName, "ViewAccount", "Account", new { id = Model.UserId }, null)
                <br />
                @Model.DateAdded
                <br />
                @Html.ActionLink(@SocialNetwork.Resources.Resource.viewProfile, "ViewAccount", "Account", new { id = Model.UserId }, new { @class = "btn btn-primary btn-xs" })
            </div>
            <div class="pull-right">
                <a href="~/Account/ViewAccount?id=@Model.UserId"><img src="@Model.UserImage" /></a>
            </div>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-lg-8">
            <div class="pull-left">
                @Html.Markdown(Model.Content)
                @Html.Action("ViewChart", new { taskId = Model.Id})
            </div>
        </div>
        <div class="col-lg-4">
            <div class="" align="center">
                <h3 style="margin: 15px 0 0 0">@Html.ActionLink(Model.Category, "ViewAllTasks", "UserTask", new { filterParam = "Category", filterName = Model.Category }, null)</h3>
                <div id="taskStatistic-@Model.Id">@Html.Action("TaskStatistics", "UserTask", new { taskId = Model.Id })</div>
                @using (Ajax.BeginForm("SendMessage", "MessageMistake", new AjaxOptions
                {
                Url = Url.Action("SendMessage", "MessageMistake"),
                HttpMethod = "POST",
                }))
                {
                    <div class="input-group">
                        <span class="btn-group-xs">
                            <input  class="btn btn-psrimary" type="submit" value="@SocialNetwork.Resources.Resource.MessageMistake" />
                            <input id="messageMistake" hidden="hidden" value="@Model.Id"/>
                        </span>
                    </div>
                }
            </div>
        </div>

    </div>
</div>

@Html.Partial("_ViewCommentsPartial")

<script type="text/javascript">
    function addedCommentSuccess() {
        $("#comment").val("");
    }
    function checkResult(data) {
        if (!data) {
            $("#checkSolution").addClass("has-error");
        } else {
            $("#checkSolution").remove();
            $("#header").append('<div class="alert alert-dismissable alert-success" style="width: 264px" align="center">Your solution is right. Congratulations!</div>');
        }
    }
    if ($("#taskId").attr("data-task-status") === "True") {
        $("#comment").attr("disabled", true);
        $("#addComment").attr("disabled", true);
    }
    $("#comment").maxlength({
        alwaysShow: false,
        threshold: 10,
        warningClass: "label label-success",
        limitReachedClass: "label label-danger",
        separator: ' / ',
        validate: true
    });


    //$(function () {
    //    $('a.linktip').wrap('<span class="tip" />'); //оборачиваем соответствующие элементы в контейнер
    //    $('span.tip').each(function () {
    //        myTip = $(this),
    //        tipLink = myTip.children('a'),
    //        tBlock = myTip.children('span').length, //подсчитываем дочерние SPAN элементы внутри контейнера
    //        tTitle = tipLink.attr('title') != 0, //определяем наличие тега TITLE
    //        tipText = tipLink.attr('title'); //берем текст из тега TITLE

    //        tipLink.removeAttr("title"); //скрываем обычный TITLE
    //        условие - если внутри нет доч. SPAN и есть TITLE,
    //        добавляем соответствующий SPAN с текстом взятым из TITLE
    //        if (tBlock === 0 && tTitle === true) { myTip.append('<span class="answer">' + tipText + '</span>') };

    //        var tip = myTip.find('span.answer , span.answer-left').hide(); //найдем и скроем блоки с подсказками

    //        при наличии у ссылки тега EM подсказка будет появляется по клику
    //        также сразу добавим и "крестик" закрытия
    //        tipLink.has('em').click(showTip).siblings('span').append('<b class="close">X</b>');

    //        если тага EM нет, подсказка будет появляться при наведении курсора
    //        tipLink.not($('em').parent()).hoverIntent(
    //           showTip,
    //         function () {
    //             tip.fadeOut(200);
    //         }
    //        );
    //        закрытие подсказки при клике на "крестик"
    //        tip.on('click', '.close', function () {
    //            tip.fadeOut(200);
    //        }
    //        );

    //        функция вывода и появления подсказки на экран
    //        вне зависимости от размеров окна,
    //        наличия горизонтальной или вертикальной прокрутки
    //        подсказка всегда будет в видимой области
    //        function showTip(e) {
    //            xM = e.pageX,
    //            yM = e.pageY,
    //            tipW = tip.width(),
    //            tipH = tip.height(),
    //            winW = $(window).width(),
    //            winH = $(window).height(),
    //            scrollwinH = $(window).scrollTop(),
    //            scrollwinW = $(window).scrollLeft(),
    //            curwinH = $(window).scrollTop() + $(window).height();
    //            if (xM > scrollwinW + tipW * 2) { tip.removeClass('answer').addClass('answer-left'); }
    //            else { tip.removeClass('answer-left').addClass('answer'); }
    //            if (yM > scrollwinH + tipH && yM > curwinH / 2) { tip.addClass('a-top'); }
    //            else { tip.removeClass('a-top'); }
    //            tip.fadeIn(100).css('display', 'block');
    //            e.preventDefault();
    //        };
    //    });
    //});/*конец*/

</script>


